version: '3.8'

volumes:
  review_vol:
  movies_vol:

networks:
  movie_rotten_net:
    driver: bridge

services:



  movie:
    image: movie/rotten_movie:latest
    build:
      context: ./movie/src/.
      dockerfile: Dockerfile
    restart: always
    networks:
      - movie_rotten_net
    ports:
      - 8084:8080
    
    depends_on:
      - mongo_movies_db
    environment:
      MONGODB_URI: mongodb://mongouser:mongopwd@mongo_movies_db:27017/admin

  mongo_movies_db:
    image: mongo:4.4.3
    restart: always
    ports:
      - 27017:27017
    networks:
      - movie_rotten_net
    volumes:
      - movies_vol:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongouser
      MONGO_INITDB_ROOT_PASSWORD: mongopwd



  postgres_review_db:
    image: postgres:14.1
    restart: always
    networks:
      - movie_rotten_net
    volumes:
      - review_vol:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=Pg@123
      - POSTGRES_DB=pguser

  review:
    image: rev/rotten_review:latest
    build:
      context: ./review/src/Review.Web/.
      dockerfile: Dockerfile
    restart: always
    networks:
      - movie_rotten_net
    volumes:
      - review_vol:/var/lib/postgresql/data
    ports:
      - 8080:80
    depends_on:
      - postgres_review_db
    environment:
      ConnectionStrings__MyConnection: Host=postgres_review_db;Database=pguser;Username=pguser;Password=Pg@123;


  rotten:
    image: rotten/webapp:latest
    build:
      context: ./rotten-potatoes/src/.
      dockerfile: Dockerfile
    restart: always
    networks:
      - movie_rotten_net
    ports:
      - 5000:5000
    
    depends_on:
      - review
      - movies
    environment:
      MOVIE_SERVICE_URI: http://movies:8084
      REVIEW_SERVICE_URI: http://review:80